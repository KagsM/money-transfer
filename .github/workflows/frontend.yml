name: Frontend CI/CD

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Update GitHub CLI
        run: |
          sudo apt-get install -y curl
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y
          gh --version

      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test --if-present

      - name: Build
        run: npm run build

      - name: Deploy with Vercel CLI
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_SECRET_TOKEN }}
        run: |
          npm install -g vercel
          vercel --token "${{ secrets.VERCEL_SECRET_TOKEN }}" --prod --confirm --yes

      - name: Update GitHub Project Board Status
        if: success()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: "KagsM"
          PROJECT_NUMBER: "4"
          STATUS_FIELD: "Status"
          STATUS_VALUE: "In review"
        run: |
          echo "Fetching Project ID..."
          PROJECT_ID=$(gh project view $PROJECT_NUMBER --owner $OWNER --json id -q .id)

          echo "Fetching Field ID for '$STATUS_FIELD'..."
          FIELD_ID=$(gh project field-list $PROJECT_NUMBER --owner $OWNER --json name,id -q ".[] | select(.name==\"$STATUS_FIELD\") | .id")

          echo "Fetching Option ID for '$STATUS_VALUE'..."
          OPTION_ID=$(gh project field-list $PROJECT_NUMBER --owner $OWNER --json name,options -q ".[] | select(.name==\"$STATUS_FIELD\") | .options[] | select(.name==\"$STATUS_VALUE\") | .id")

          echo "Fetching Project Item..."
          ITEM_ID=$(gh project item-list $PROJECT_NUMBER --owner $OWNER --limit 1 --json id -q ".[0].id")

          echo "Updating Item Field..."
          gh project item-edit --id "$ITEM_ID" --field-id "$FIELD_ID" --single-select-option-id "$OPTION_ID"

          echo "âœ… Successfully moved card to '$STATUS_VALUE'."

      - name: Notify Slack
        if: always()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": ":rocket: *Frontend CI/CD* - ${{ job.status }} for *${{ github.repository }}* on *${{ github.ref_name }}* by *${{ github.actor }}*"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 

      - name: Comment on PR with Deploy Status
        if: always()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ðŸš€ **Deployment Status:** ${{ job.status }}
            ðŸ”— Vercel URL: [View Deployment](https://vercel.com/dashboard)